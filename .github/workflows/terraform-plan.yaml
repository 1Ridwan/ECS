name: Terraform Plan

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      # Pulls the latest version of your code from the GitHub repository
      - name: Checkout code
        uses: actions/checkout@v5

      # Installs Terraform on the GitHub runner
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      # Configures your AWS access by using the credentials stored in GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "eu-west-2"

      # Initialize terraform
      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      # Execute the terraform plan
      - name: Terraform Plan
        working-directory: ./terraform
        env:
            base_cidr: ${{ env.TF_VARS_BASE_CIDR }}
            vpc_region: ${{ env.TF_VARS_VPC_REGION }}
            availability_zones: ${{ env.TF_VARS_AVAILABILITY_ZONES }}
            subnet_count: ${{ env.TF_VARS_SUBNET_COUNT }}
        run: |
          terraform plan -var="base_cidr=${{ env.TF_VARS_BASE_CIDR }}" -var="vpc_region==${{ env.TF_VARS_VPC_REGION }}" -var="availability_zones=${{ env.TF_VARS_AVAILABILITY_ZONES }}" -no-color -input=false
        continue-on-error: true

      # Deploy terraform changes
      #- name: Terraform Apply
       # run: terraform apply -auto-approve

      # Destroy terraform resources (uncomment lines below)
      # - name: Terraform Destroy
      #   run: terraform destroy -auto-approve