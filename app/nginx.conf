# Send errors to stderr (goes to CloudWatch via awslogs)
error_log /dev/stderr info;

events {}

http {
  # Use the built-in "combined" format (donâ€™t redefine it)
  access_log /dev/stdout combined;

  # Optional JSON format (note: name is not 'combined')
  log_format kuma_json escape=json
      '{ "time":"$time_iso8601", '
      '"remote_addr":"$remote_addr", '
      '"request":"$request", '
      '"status":$status, '
      '"bytes_sent":$bytes_sent, '
      '"referer":"$http_referer", '
      '"user_agent":"$http_user_agent", '
      '"x_forwarded_for":"$http_x_forwarded_for", '
      '"upstream_addr":"$upstream_addr", '
      '"upstream_status":"$upstream_status", '
      '"request_time":$request_time, '
      '"upstream_response_time":"$upstream_response_time" }';
  # If you prefer JSON, switch the access_log line above to:
  # access_log /dev/stdout kuma_json;

  # WebSocket upgrade helper must be inside http{}
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # Keep temp/log paths in writable locations
  client_body_temp_path /tmp/nginx/client_temp;
  proxy_temp_path       /tmp/nginx/proxy_temp;

  server {
    listen 80;

    # static assets from your build
    location /dist/ {
      root /app;
      access_log off;
      expires 7d;
    }

    # health
    location = /healthz { return 200 "ok\n"; }

    # reverse proxy to Node on 3001
    location / {
    proxy_pass http://127.0.0.1:3001;
    proxy_http_version 1.1;

    # REQUIRED for WebSocket / socket.io
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";   # <-- literal string (drop the map here)

    # Forwarded headers that some apps rely on
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    # Keep sockets alive and avoid buffering issues
    proxy_read_timeout  86400;
    proxy_send_timeout  600;
    proxy_connect_timeout 60;
    proxy_buffering off;
    }

    # WebSocket endpoint needs strict headers and long timeouts
    location /socket.io/ {
    proxy_pass http://127.0.0.1:3001;
    proxy_http_version 1.1;

    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_read_timeout 86400;
    proxy_send_timeout 600;
    proxy_connect_timeout 60;

    proxy_buffering off;
    }


  }
}
